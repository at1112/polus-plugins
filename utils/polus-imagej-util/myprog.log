This file reports plugins that this framework cannot handle, as well as their INPUTS and OUTPUTS (both wipp and imageJ types)
(those plugins which DO NOT satisfy the criteria of taking a collection as both input and output)

861 ##Total Number of Plugins
289 ##Total NUmber of Plugin Groups

index 0
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountPolygon
index 1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountConvexHullPolygon
index 2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultConvexityPolygon
index 3
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoundarySizeConvexHullPolygon
index 4
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoxivityPolygon
index 5
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizeConvexHullPolygon
index 6
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSolidityPolygon
index 7
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultBoxivityMesh
index 8
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultCompactness
index 9
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountConvexHullMesh
index 10
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeConvexHullMesh
index 11
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultConvexityMesh
index 12
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMainElongation
index 13
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMedianElongation
index 14
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSolidityMesh
index 15
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSparenessMesh
index 16
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSphericity
index 17
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceArea
index 18
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceAreaConvexHullMesh
index 19
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountMesh
index 20
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.SizeII
index 21
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment00
index 22
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment01
index 23
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment10
index 24
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment11
index 25
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment00
index 26
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment01
index 27
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment10
index 28
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment11
index 29
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableGeometricMean
index 30
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableHarmonicMean
index 31
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMax
index 32
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMean
index 33
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMin
index 34
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IISize
index 35
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableStandardDeviation
index 36
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableVariance
index 42
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizePolygon
index 43
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeMesh
index 98
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
index 105
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Namespace'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForNamespace
index 106
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Op'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForOp
index 154
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
index 155
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
index 156
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
index 157
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
index 159
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.huang.ComputeHuangThreshold
index 160
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.ij1.ComputeIJ1Threshold
index 161
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.li.ComputeLiThreshold
index 162
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.maxEntropy.ComputeMaxEntropyThreshold
index 163
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.mean.ComputeMeanThreshold
index 164
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.moments.ComputeMomentsThreshold
index 165
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.otsu.ComputeOtsuThreshold
index 166
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.percentile.ComputePercentileThreshold
index 167
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.renyiEntropy.ComputeRenyiEntropyThreshold
index 168
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.rosin.ComputeRosinThreshold
index 169
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.shanbhag.ComputeShanbhagThreshold
index 170
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.triangle.ComputeTriangleThreshold
index 171
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.yen.ComputeYenThreshold
index 180
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$IntegerToInt16
index 182
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$IntegerToInt64
index 183
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$IntegerToInt8
index 186
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$IntegerToUint16
index 190
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$IntegerToUint64
index 191
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$IntegerToUint8
index 199
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'LabelRegion'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidLabelRegion
index 205
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidII
index 208
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
index 209
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
index 210
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNot
index 211
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
index 212
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
index 213
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
index 214
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
index 215
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
index 216
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
index 217
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
index 218
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
index 219
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
index 220
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAbs
index 221
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
index 222
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
index 223
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerComplement
index 224
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
index 225
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
index 226
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
index 227
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
index 228
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
index 229
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerNegate
index 230
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
index 231
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
index 232
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
index 233
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
index 234
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
index 235
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
index 236
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
index 237
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
index 238
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
index 239
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
index 240
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
index 241
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
index 242
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAbs
index 243
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
index 244
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
index 245
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongComplement
index 246
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
index 247
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
index 248
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
index 249
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
index 250
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
index 251
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongNegate
index 252
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
index 253
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
index 254
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
index 255
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
index 256
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
index 257
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
index 258
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
index 259
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
index 260
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
index 261
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
index 262
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
index 263
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
index 264
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAbs
index 265
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
index 266
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
index 267
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
index 268
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
index 269
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
index 270
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatNegate
index 271
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
index 272
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRound
index 273
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSignum
index 274
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
index 275
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
index 276
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
index 277
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
index 278
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
index 279
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
index 280
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
index 281
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAbs
index 282
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
index 283
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArccos
index 284
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArcsin
index 285
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArctan
index 286
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCeil
index 287
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCos
index 288
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCosh
index 289
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCubeRoot
index 290
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
index 291
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleExp
index 292
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleFloor
index 293
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog
index 294
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog10
index 295
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLogOnePlusX
index 296
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
index 297
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
index 298
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
index 299
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleNegate
index 300
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
index 301
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
index 302
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRound
index 303
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSignum
index 304
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSin
index 305
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSinh
index 306
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSqrt
index 307
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
index 308
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTan
index 309
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTanh
index 310
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
index 311
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultCircularity
index 312
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultEccentricity
index 313
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultElongation
index 314
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsAngle
index 315
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameter
index 316
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMajorAxis
index 317
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinorAxis
index 318
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultPerimeterLength
index 319
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultRoundness
index 322
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidPolygon
index 323
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidMesh
index 324
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
index 325
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
index 326
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
index 327
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
index 328
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
index 329
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
index 330
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
index 331
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
index 332
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
index 333
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
index 334
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
index 335
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
index 336
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
index 337
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
index 338
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
index 339
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
index 340
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment00
index 341
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment02
index 342
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment03
index 343
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment11
index 344
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment12
index 345
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment20
index 346
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment21
index 347
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment30
index 348
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment1
index 349
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment2
index 350
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment3
index 351
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment4
index 352
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment5
index 353
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment6
index 354
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment7
index 355
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment02
index 356
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment03
index 357
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment11
index 358
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment12
index 359
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment20
index 360
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment21
index 361
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment30
index 362
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultGeometricMean
index 363
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultHarmonicMean
index 364
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultKurtosis
index 365
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMedian
index 367
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment1AboutMean
index 368
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment2AboutMean
index 369
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment3AboutMean
index 370
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment4AboutMean
index 371
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
index 372
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
index 373
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSize
index 374
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSkewness
index 375
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultStandardDeviation
index 376
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSum
index 377
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfInverses
index 378
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfLogs
index 379
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfSquares
index 380
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultVariance
index 381
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultCoarsenessFeature
index 382
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultContrastFeature
index 383
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
index 386
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
index 387
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
index 388
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
index 389
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
index 390
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
index 392
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
index 410
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.clip.ClipRealTypes
index 411
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.copy.CopyRealTypes
index 413
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.normalizeScale.NormalizeScaleRealTypes
index 414
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.scale.ScaleRealTypes
index 423
index 436
index 440
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
index 441
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocHXY
index 442
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanX
index 443
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanY
index 444
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPX
index 445
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXMinusY
index 446
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXPlusY
index 447
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPY
index 448
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdX
index 449
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdY
index 452
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
index 453
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addPoissonNoise.AddPoissonNoiseRealType
index 474
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.DefaultCenterOfGravity
index 478
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
index 480
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretAngle
index 481
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretDiameter
index 483
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretAngle
index 484
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretDiameter
index 490
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
index 491
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
index 492
index 494
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN image.ascii.DefaultASCII
index 521
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
index 522
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
index 523
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
index 524
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
index 525
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
index 526
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Not
index 527
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
index 528
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
index 529
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
index 530
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
index 544
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
index 545
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
index 546
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
index 547
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
index 548
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
index 549
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
index 550
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
index 600
index 601
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Abs
index 602
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccos
index 603
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccosh
index 604
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccot
index 605
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccoth
index 606
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsc
index 607
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsch
index 608
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsec
index 609
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsech
index 610
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsin
index 611
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsinh
index 612
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctan
index 613
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctanh
index 614
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ceil
index 615
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cos
index 616
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cosh
index 617
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cot
index 618
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Coth
index 619
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csc
index 620
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csch
index 621
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$CubeRoot
index 622
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Exp
index 623
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$ExpMinusOne
index 624
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Floor
index 625
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
index 626
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
index 627
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log
index 628
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log10
index 629
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log2
index 630
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$LogOnePlusX
index 631
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
index 632
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
index 633
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$NearestInt
index 634
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Negate
index 635
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
index 636
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomGaussian
index 637
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomUniform
index 638
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
index 639
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Round
index 640
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sec
index 641
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sech
index 642
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Signum
index 643
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sin
index 644
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinc
index 645
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$SincPi
index 646
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinh
index 647
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqr
index 648
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqrt
index 649
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Step
index 650
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tan
index 651
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tanh
index 652
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ulp
index 671
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'List'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectJunctions.DefaultDetectJunctions
index 672
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
index 673
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralMean
index 674
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralSum
index 675
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralVariance
index 719
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN topology.BoxCount
index 720
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26N
index 721
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26NFloating
index 722
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCorrection
index 769
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'FloatType'} PLUGIN convert.ConvertTypes$ComplexToFloat32
index 770
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN convert.ConvertTypes$ComplexToFloat64
index 771
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$ComplexToInt16
index 773
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$ComplexToInt64
index 774
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$ComplexToInt8
index 777
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$ComplexToUint16
index 781
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$ComplexToUint64
index 782
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$ComplexToUint8
index 822
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMean
out:
['__class__', '__del__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'coloc', 'compareTo', 'context', 'convert', 'copy', 'create', 'deconvolve', 'dispose', 'equals', 'eval', 'filter', 'geom', 'getClass', 'getContext', 'getIdentifier', 'getInfo', 'getLocation', 'getPluginService', 'getPluginType', 'getPlugins', 'getPriority', 'getVersion', 'haralick', 'hashCode', 'help', 'identity', 'image', 'imagemoments', 'info', 'infos', 'initialize', 'join', 'labeling', 'lbp', 'linalg', 'log', 'logic', 'loop', 'map', 'matcher', 'math', 'module', 'morphology', 'namespace', 'notify', 'notifyAll', 'op', 'ops', 'parent', 'pluginService', 'registerEventHandlers', 'run', 'setContext', 'setInfo', 'setPriority', 'slice', 'stats', 'tamura', 'thread', 'threshold', 'toString', 'topology', 'transform', 'wait', 'zernike']
861
289
index 0
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountPolygon
index 1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountConvexHullPolygon
index 2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultConvexityPolygon
index 3
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoundarySizeConvexHullPolygon
index 4
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoxivityPolygon
index 5
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizeConvexHullPolygon
index 6
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSolidityPolygon
index 7
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultBoxivityMesh
index 8
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultCompactness
index 9
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountConvexHullMesh
index 10
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeConvexHullMesh
index 11
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultConvexityMesh
index 12
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMainElongation
index 13
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMedianElongation
index 14
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSolidityMesh
index 15
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSparenessMesh
index 16
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSphericity
index 17
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceArea
index 18
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceAreaConvexHullMesh
index 19
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountMesh
index 20
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.SizeII
index 21
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment00
index 22
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment01
index 23
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment10
index 24
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment11
index 25
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment00
index 26
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment01
index 27
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment10
index 28
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment11
index 29
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableGeometricMean
index 30
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableHarmonicMean
index 31
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMax
index 32
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMean
index 33
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMin
index 34
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IISize
index 35
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableStandardDeviation
index 36
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableVariance
index 42
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizePolygon
index 43
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeMesh
index 98
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
index 105
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Namespace'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForNamespace
index 106
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Op'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForOp
index 154
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
index 155
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
index 156
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
index 157
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
index 159
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.huang.ComputeHuangThreshold
index 160
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.ij1.ComputeIJ1Threshold
index 161
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.li.ComputeLiThreshold
index 162
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.maxEntropy.ComputeMaxEntropyThreshold
index 163
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.mean.ComputeMeanThreshold
index 164
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.moments.ComputeMomentsThreshold
index 165
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.otsu.ComputeOtsuThreshold
index 166
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.percentile.ComputePercentileThreshold
index 167
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.renyiEntropy.ComputeRenyiEntropyThreshold
index 168
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.rosin.ComputeRosinThreshold
index 169
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.shanbhag.ComputeShanbhagThreshold
index 170
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.triangle.ComputeTriangleThreshold
index 171
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.yen.ComputeYenThreshold
index 180
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$IntegerToInt16
index 182
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$IntegerToInt64
index 183
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$IntegerToInt8
index 186
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$IntegerToUint16
index 190
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$IntegerToUint64
index 191
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$IntegerToUint8
index 199
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'LabelRegion'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidLabelRegion
index 205
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidII
index 208
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
index 209
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
index 210
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNot
index 211
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
index 212
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
index 213
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
index 214
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
index 215
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
index 216
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
index 217
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
index 218
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
index 219
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
index 220
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAbs
index 221
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
index 222
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
index 223
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerComplement
index 224
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
index 225
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
index 226
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
index 227
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
index 228
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
index 229
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerNegate
index 230
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
index 231
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
index 232
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
index 233
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
index 234
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
index 235
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
index 236
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
index 237
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
index 238
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
index 239
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
index 240
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
index 241
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
index 242
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAbs
index 243
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
index 244
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
index 245
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongComplement
index 246
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
index 247
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
index 248
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
index 249
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
index 250
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
index 251
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongNegate
index 252
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
index 253
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
index 254
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
index 255
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
index 256
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
index 257
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
index 258
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
index 259
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
index 260
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
index 261
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
index 262
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
index 263
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
index 264
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAbs
index 265
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
index 266
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
index 267
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
index 268
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
index 269
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
index 270
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatNegate
index 271
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
index 272
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRound
index 273
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSignum
index 274
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
index 275
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
index 276
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
index 277
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
index 278
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
index 279
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
index 280
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
index 281
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAbs
index 282
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
index 283
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArccos
index 284
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArcsin
index 285
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArctan
index 286
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCeil
index 287
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCos
index 288
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCosh
index 289
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCubeRoot
index 290
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
index 291
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleExp
index 292
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleFloor
index 293
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog
index 294
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog10
index 295
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLogOnePlusX
index 296
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
index 297
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
index 298
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
index 299
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleNegate
index 300
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
index 301
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
index 302
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRound
index 303
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSignum
index 304
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSin
index 305
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSinh
index 306
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSqrt
index 307
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
index 308
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTan
index 309
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTanh
index 310
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
index 311
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultCircularity
index 312
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultEccentricity
index 313
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultElongation
index 314
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsAngle
index 315
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameter
index 316
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMajorAxis
index 317
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinorAxis
index 318
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultPerimeterLength
index 319
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultRoundness
index 322
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidPolygon
index 323
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidMesh
index 324
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
index 325
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
index 326
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
index 327
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
index 328
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
index 329
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
index 330
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
index 331
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
index 332
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
index 333
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
index 334
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
index 335
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
index 336
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
index 337
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
index 338
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
index 339
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
index 340
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment00
index 341
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment02
index 342
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment03
index 343
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment11
index 344
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment12
index 345
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment20
index 346
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment21
index 347
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment30
index 348
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment1
index 349
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment2
index 350
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment3
index 351
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment4
index 352
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment5
index 353
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment6
index 354
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment7
index 355
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment02
index 356
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment03
index 357
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment11
index 358
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment12
index 359
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment20
index 360
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment21
index 361
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment30
index 362
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultGeometricMean
index 363
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultHarmonicMean
index 364
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultKurtosis
index 365
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMedian
index 367
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment1AboutMean
index 368
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment2AboutMean
index 369
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment3AboutMean
index 370
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment4AboutMean
index 371
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
index 372
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
index 373
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSize
index 374
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSkewness
index 375
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultStandardDeviation
index 376
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSum
index 377
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfInverses
index 378
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfLogs
index 379
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfSquares
index 380
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultVariance
index 381
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultCoarsenessFeature
index 382
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultContrastFeature
index 383
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
index 386
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
index 387
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
index 388
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
index 389
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
index 390
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
index 392
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
index 410
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.clip.ClipRealTypes
index 411
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.copy.CopyRealTypes
index 413
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.normalizeScale.NormalizeScaleRealTypes
index 414
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.scale.ScaleRealTypes
index 423
index 436
index 440
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
index 441
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocHXY
index 442
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanX
index 443
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanY
index 444
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPX
index 445
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXMinusY
index 446
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXPlusY
index 447
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPY
index 448
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdX
index 449
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdY
index 452
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
index 453
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addPoissonNoise.AddPoissonNoiseRealType
index 474
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.DefaultCenterOfGravity
index 478
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
index 480
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretAngle
index 481
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretDiameter
index 483
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretAngle
index 484
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretDiameter
index 490
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
index 491
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
index 492
index 494
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN image.ascii.DefaultASCII
index 521
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
index 522
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
index 523
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
index 524
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
index 525
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
index 526
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Not
index 527
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
index 528
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
index 529
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
index 530
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
index 544
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
index 545
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
index 546
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
index 547
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
index 548
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
index 549
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
index 550
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
index 600
index 601
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Abs
index 602
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccos
index 603
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccosh
index 604
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccot
index 605
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccoth
index 606
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsc
index 607
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsch
index 608
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsec
index 609
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsech
index 610
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsin
index 611
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsinh
index 612
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctan
index 613
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctanh
index 614
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ceil
index 615
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cos
index 616
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cosh
index 617
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cot
index 618
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Coth
index 619
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csc
index 620
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csch
index 621
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$CubeRoot
index 622
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Exp
index 623
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$ExpMinusOne
index 624
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Floor
index 625
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
index 626
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
index 627
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log
index 628
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log10
index 629
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log2
index 630
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$LogOnePlusX
index 631
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
index 632
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
index 633
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$NearestInt
index 634
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Negate
index 635
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
index 636
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomGaussian
index 637
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomUniform
index 638
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
index 639
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Round
index 640
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sec
index 641
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sech
index 642
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Signum
index 643
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sin
index 644
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinc
index 645
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$SincPi
index 646
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinh
index 647
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqr
index 648
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqrt
index 649
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Step
index 650
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tan
index 651
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tanh
index 652
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ulp
index 671
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'List'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectJunctions.DefaultDetectJunctions
index 672
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
index 673
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralMean
index 674
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralSum
index 675
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralVariance
index 719
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN topology.BoxCount
index 720
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26N
index 721
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26NFloating
index 722
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCorrection
index 769
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'FloatType'} PLUGIN convert.ConvertTypes$ComplexToFloat32
index 770
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN convert.ConvertTypes$ComplexToFloat64
index 771
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$ComplexToInt16
index 773
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$ComplexToInt64
index 774
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$ComplexToInt8
index 777
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$ComplexToUint16
index 781
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$ComplexToUint64
index 782
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$ComplexToUint8
index 822
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMean
['coloc.icq', 'coloc.kendallTau', 'coloc.maxTKendallTau', 'coloc.pValue', 'coloc.pearsons', 'convert.bit', 'convert.cfloat32', 'convert.cfloat64', 'convert.clip', 'convert.copy', 'convert.float32', 'convert.float64', 'convert.imageType', 'convert.int16', 'convert.int32', 'convert.int64', 'convert.int8', 'convert.normalizeScale', 'convert.scale', 'convert.uint12', 'convert.uint128', 'convert.uint16', 'convert.uint2', 'convert.uint32', 'convert.uint4', 'convert.uint64', 'convert.uint8', 'copy.img', 'copy.imgLabeling', 'copy.iterableInterval', 'copy.labelingMapping', 'copy.rai', 'copy.type', 'create.img', 'create.imgFactory', 'create.imgLabeling', 'create.imgPlus', 'create.integerType', 'create.kernel', 'create.kernel2ndDerivBiGauss', 'create.kernelBiGauss', 'create.kernelDiffraction', 'create.kernelGabor', 'create.kernelGaborComplexDouble', 'create.kernelGaborDouble', 'create.kernelGauss', 'create.kernelLog', 'create.kernelSobel', 'create.labelingMapping', 'create.nativeType', 'create.object', 'deconvolve.accelerate', 'deconvolve.firstGuess', 'deconvolve.normalizationFactor', 'deconvolve.richardsonLucy', 'deconvolve.richardsonLucyCorrection', 'deconvolve.richardsonLucyTV', 'deconvolve.richardsonLucyUpdate', 'eval', 'filter.addNoise', 'filter.addPoissonNoise', 'filter.allPartialDerivatives', 'filter.bilateral', 'filter.convolve', 'filter.correlate', 'filter.createFFTOutput', 'filter.derivativeGauss', 'filter.dog', 'filter.fft', 'filter.fftSize', 'filter.frangiVesselness', 'filter.gauss', 'filter.hessian', 'filter.ifft', 'filter.linearFilter', 'filter.max', 'filter.mean', 'filter.median', 'filter.min', 'filter.padFFTInput', 'filter.padInput', 'filter.padShiftFFTKernel', 'filter.paddingIntervalCentered', 'filter.paddingIntervalOrigin', 'filter.partialDerivative', 'filter.sigma', 'filter.sobel', 'filter.tubeness', 'filter.variance', 'geom.boundarySize', 'geom.boundarySizeConvexHull', 'geom.boundingBox', 'geom.boxivity', 'geom.centerOfGravity', 'geom.centroid', 'geom.circularity', 'geom.compactness', 'geom.contour', 'geom.convexHull', 'geom.convexity', 'geom.eccentricity', 'geom.feretsAngle', 'geom.feretsDiameter', 'geom.mainElongation', 'geom.majorAxis', 'geom.marchingCubes', 'geom.maximumFeret', 'geom.maximumFeretsAngle', 'geom.maximumFeretsDiameter', 'geom.medianElongation', 'geom.minimumFeret', 'geom.minimumFeretsAngle', 'geom.minimumFeretsDiameter', 'geom.minorAxis', 'geom.roundness', 'geom.secondMoment', 'geom.size', 'geom.sizeConvexHull', 'geom.smallestEnclosingBoundingBox', 'geom.solidity', 'geom.spareness', 'geom.sphericity', 'geom.vertexInterpolator', 'geom.verticesCount', 'geom.verticesCountConvexHull', 'geom.voxelization', 'haralick.asm', 'haralick.clusterPromenence', 'haralick.clusterShade', 'haralick.contrast', 'haralick.correlation', 'haralick.differenceEntropy', 'haralick.differenceVariance', 'haralick.entropy', 'haralick.icm1', 'haralick.icm2', 'haralick.ifdm', 'haralick.maxProbability', 'haralick.sumAverage', 'haralick.sumEntropy', 'haralick.sumVariance', 'haralick.textureHomogeneity', 'haralick.variance', 'help', 'hog.hog', 'identity', 'image.ascii', 'image.cooccurrenceMatrix', 'image.distancetransform', 'image.equation', 'image.fill', 'image.histogram', 'image.integral', 'image.invert', 'image.normalize', 'image.squareIntegral', 'image.watershed', 'imagemoments.centralMoment00', 'imagemoments.centralMoment01', 'imagemoments.centralMoment02', 'imagemoments.centralMoment03', 'imagemoments.centralMoment10', 'imagemoments.centralMoment11', 'imagemoments.centralMoment12', 'imagemoments.centralMoment20', 'imagemoments.centralMoment21', 'imagemoments.centralMoment30', 'imagemoments.huMoment1', 'imagemoments.huMoment2', 'imagemoments.huMoment3', 'imagemoments.huMoment4', 'imagemoments.huMoment5', 'imagemoments.huMoment6', 'imagemoments.huMoment7', 'imagemoments.moment00', 'imagemoments.moment01', 'imagemoments.moment10', 'imagemoments.moment11', 'imagemoments.normalizedCentralMoment02', 'imagemoments.normalizedCentralMoment03', 'imagemoments.normalizedCentralMoment11', 'imagemoments.normalizedCentralMoment12', 'imagemoments.normalizedCentralMoment20', 'imagemoments.normalizedCentralMoment21', 'imagemoments.normalizedCentralMoment30', 'join', 'labeling.cca', 'labeling.merge', 'lbp.lbp2D', 'linalg.rotate', 'logic.and', 'logic.conditional', 'logic.equal', 'logic.greaterThan', 'logic.greaterThanOrEqual', 'logic.lessThan', 'logic.lessThanOrEqual', 'logic.not', 'logic.notEqual', 'logic.or', 'logic.xor', 'loop', 'map', 'math.abs', 'math.add', 'math.and', 'math.arccos', 'math.arccosh', 'math.arccot', 'math.arccoth', 'math.arccsc', 'math.arccsch', 'math.arcsec', 'math.arcsech', 'math.arcsin', 'math.arcsinh', 'math.arctan', 'math.arctanh', 'math.assign', 'math.ceil', 'math.complement', 'math.complexConjugateMultiply', 'math.cos', 'math.cosh', 'math.cot', 'math.coth', 'math.csc', 'math.csch', 'math.cubeRoot', 'math.divide', 'math.exp', 'math.expMinusOne', 'math.floor', 'math.gamma', 'math.invert', 'math.leftShift', 'math.log', 'math.log10', 'math.log2', 'math.logOnePlusX', 'math.max', 'math.min', 'math.multiply', 'math.nearestInt', 'math.negate', 'math.or', 'math.power', 'math.randomGaussian', 'math.randomUniform', 'math.reciprocal', 'math.remainder', 'math.rightShift', 'math.round', 'math.sec', 'math.sech', 'math.signum', 'math.sin', 'math.sinc', 'math.sincPi', 'math.sinh', 'math.sqr', 'math.sqrt', 'math.step', 'math.subtract', 'math.tan', 'math.tanh', 'math.ulp', 'math.unsignedRightShift', 'math.xor', 'math.zero', 'morphology.blackTopHat', 'morphology.close', 'morphology.dilate', 'morphology.erode', 'morphology.extractHoles', 'morphology.fillHoles', 'morphology.floodFill', 'morphology.open', 'morphology.outline', 'morphology.thinGuoHall', 'morphology.thinHilditch', 'morphology.thinMorphological', 'morphology.thinZhangSuen', 'morphology.topHat', 'op', 'run', 'segment.detectJunctions', 'segment.detectRidges', 'slice', 'stats.geometricMean', 'stats.harmonicMean', 'stats.integralMean', 'stats.integralSum', 'stats.integralVariance', 'stats.kurtosis', 'stats.leastSquares', 'stats.max', 'stats.mean', 'stats.median', 'stats.min', 'stats.minMax', 'stats.moment1AboutMean', 'stats.moment2AboutMean', 'stats.moment3AboutMean', 'stats.moment4AboutMean', 'stats.percentile', 'stats.quantile', 'stats.size', 'stats.skewness', 'stats.stdDev', 'stats.sum', 'stats.sumOfInverses', 'stats.sumOfLogs', 'stats.sumOfSquares', 'stats.variance', 'tamura.coarseness', 'tamura.contrast', 'tamura.directionality', 'thread.chunker', 'threshold.apply', 'threshold.huang', 'threshold.ij1', 'threshold.intermodes', 'threshold.isoData', 'threshold.li', 'threshold.localBernsenThreshold', 'threshold.localContrastThreshold', 'threshold.localMeanThreshold', 'threshold.localMedianThreshold', 'threshold.localMidGreyThreshold', 'threshold.localNiblackThreshold', 'threshold.localPhansalkarThreshold', 'threshold.localSauvolaThreshold', 'threshold.maxEntropy', 'threshold.maxLikelihood', 'threshold.mean', 'threshold.minError', 'threshold.minimum', 'threshold.moments', 'threshold.otsu', 'threshold.percentile', 'threshold.renyiEntropy', 'threshold.rosin', 'threshold.shanbhag', 'threshold.triangle', 'threshold.yen', 'topology.boxCount', 'topology.eulerCharacteristic26N', 'topology.eulerCharacteristic26NFloating', 'topology.eulerCorrection', 'transform.addDimensionView', 'transform.collapseNumericView', 'transform.collapseRealView', 'transform.collapseView', 'transform.concatenateView', 'transform.crop', 'transform.dropSingletonDimensionsView', 'transform.extendBorderView', 'transform.extendMirrorDoubleView', 'transform.extendMirrorSingleView', 'transform.extendPeriodicView', 'transform.extendRandomView', 'transform.extendValueView', 'transform.extendView', 'transform.extendZeroView', 'transform.flatIterableView', 'transform.hyperSliceView', 'transform.interpolateView', 'transform.intervalView', 'transform.invertAxisView', 'transform.offsetView', 'transform.permuteCoordinatesInverseView', 'transform.permuteCoordinatesView', 'transform.permuteView', 'transform.project', 'transform.rasterView', 'transform.rotateView', 'transform.scaleView', 'transform.shearView', 'transform.stackView', 'transform.subsampleView', 'transform.translateView', 'transform.unshearView', 'transform.zeroMinView', 'zernike.magnitude', 'zernike.phase']
{'ListErode': 'out = ij.op().morphology().erode(in1,in2)'}
out:
861
289
index 0
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountPolygon
index 1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultVerticesCountConvexHullPolygon
index 2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultConvexityPolygon
index 3
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoundarySizeConvexHullPolygon
index 4
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultBoxivityPolygon
index 5
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizeConvexHullPolygon
index 6
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSolidityPolygon
index 7
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultBoxivityMesh
index 8
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultCompactness
index 9
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountConvexHullMesh
index 10
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeConvexHullMesh
index 11
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultConvexityMesh
index 12
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMainElongation
index 13
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultMedianElongation
index 14
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSolidityMesh
index 15
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSparenessMesh
index 16
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSphericity
index 17
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceArea
index 18
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultSurfaceAreaConvexHullMesh
index 19
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVerticesCountMesh
index 20
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.SizeII
index 21
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment00
index 22
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment01
index 23
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment10
index 24
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.IterableCentralMoment11
index 25
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment00
index 26
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment01
index 27
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment10
index 28
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.moments.DefaultMoment11
index 29
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableGeometricMean
index 30
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableHarmonicMean
index 31
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMax
index 32
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMean
index 33
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableMin
index 34
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IISize
index 35
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableStandardDeviation
index 36
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.IterableVariance
index 42
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultSizePolygon
index 43
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom3d.DefaultVolumeMesh
index 98
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealTypeCFI
index 105
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Namespace'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForNamespace
index 106
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Op'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN help.HelpForOp
index 154
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Add
index 155
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Divide
index 156
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Multiply
index 157
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'NumericType'} PLUGIN math.NumericTypeBinaryMath$Subtract
index 159
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.huang.ComputeHuangThreshold
index 160
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.ij1.ComputeIJ1Threshold
index 161
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.li.ComputeLiThreshold
index 162
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.maxEntropy.ComputeMaxEntropyThreshold
index 163
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.mean.ComputeMeanThreshold
index 164
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.moments.ComputeMomentsThreshold
index 165
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.otsu.ComputeOtsuThreshold
index 166
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.percentile.ComputePercentileThreshold
index 167
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.renyiEntropy.ComputeRenyiEntropyThreshold
index 168
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.rosin.ComputeRosinThreshold
index 169
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.shanbhag.ComputeShanbhagThreshold
index 170
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.triangle.ComputeTriangleThreshold
index 171
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Histogram1d'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN threshold.yen.ComputeYenThreshold
index 180
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$IntegerToInt16
index 182
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$IntegerToInt64
index 183
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$IntegerToInt8
index 186
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$IntegerToUint16
index 190
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$IntegerToUint64
index 191
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'IntegerType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$IntegerToUint8
index 199
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'LabelRegion'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidLabelRegion
index 205
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidII
index 208
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanAnd
index 209
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanEqual
index 210
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNot
index 211
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanNotEqual
index 212
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanOr
index 213
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$BooleanXor
index 214
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerEqual
index 215
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThan
index 216
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerGreaterThanOrEqual
index 217
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThan
index 218
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerLessThanOrEqual
index 219
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$IntegerNotEqual
index 220
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAbs
index 221
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAdd
index 222
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerAnd
index 223
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerComplement
index 224
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerDivide
index 225
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerLeftShift
index 226
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMax
index 227
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMin
index 228
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerMultiply
index 229
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerNegate
index 230
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerOr
index 231
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRemainder
index 232
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerRightShift
index 233
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerSubtract
index 234
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerUnsignedRightShift
index 235
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'int'} PLUGIN math.PrimitiveMath$IntegerXor
index 236
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongEqual
index 237
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThan
index 238
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongGreaterThanOrEqual
index 239
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThan
index 240
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongLessThanOrEqual
index 241
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$LongNotEqual
index 242
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAbs
index 243
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAdd
index 244
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongAnd
index 245
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongComplement
index 246
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongDivide
index 247
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongLeftShift
index 248
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMax
index 249
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMin
index 250
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongMultiply
index 251
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongNegate
index 252
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongOr
index 253
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRemainder
index 254
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongRightShift
index 255
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongSubtract
index 256
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongUnsignedRightShift
index 257
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'long'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'long'} PLUGIN math.PrimitiveMath$LongXor
index 258
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatEqual
index 259
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThan
index 260
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatGreaterThanOrEqual
index 261
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThan
index 262
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatLessThanOrEqual
index 263
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$FloatNotEqual
index 264
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAbs
index 265
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatAdd
index 266
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatDivide
index 267
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMax
index 268
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMin
index 269
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatMultiply
index 270
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatNegate
index 271
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRemainder
index 272
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatRound
index 273
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSignum
index 274
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'float'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'float'} PLUGIN math.PrimitiveMath$FloatSubtract
index 275
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleEqual
index 276
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThan
index 277
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleGreaterThanOrEqual
index 278
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThan
index 279
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleLessThanOrEqual
index 280
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'boolean'} PLUGIN logic.PrimitiveLogic$DoubleNotEqual
index 281
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAbs
index 282
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleAdd
index 283
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArccos
index 284
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArcsin
index 285
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleArctan
index 286
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCeil
index 287
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCos
index 288
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCosh
index 289
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleCubeRoot
index 290
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleDivide
index 291
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleExp
index 292
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleFloor
index 293
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog
index 294
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLog10
index 295
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleLogOnePlusX
index 296
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMax
index 297
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMin
index 298
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleMultiply
index 299
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleNegate
index 300
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoublePower
index 301
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRemainder
index 302
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleRound
index 303
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSignum
index 304
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSin
index 305
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSinh
index 306
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSqrt
index 307
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleSubtract
index 308
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTan
index 309
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'double'} PLUGIN math.PrimitiveMath$DoubleTanh
index 310
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'ArrayList'} PLUGIN features.lbp2d.DefaultLBP2D
index 311
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultCircularity
index 312
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultEccentricity
index 313
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultElongation
index 314
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsAngle
index 315
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Pair'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameter
index 316
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMajorAxis
index 317
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinorAxis
index 318
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultPerimeterLength
index 319
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultRoundness
index 322
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidPolygon
index 323
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Mesh'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.CentroidMesh
index 324
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterPromenence
index 325
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultClusterShade
index 326
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultContrast
index 327
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultCorrelation
index 328
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceEntropy
index 329
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultDifferenceVariance
index 330
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultEntropy
index 331
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM1
index 332
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultICM2
index 333
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultIFDM
index 334
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultMaxProbability
index 335
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumAverage
index 336
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumEntropy
index 337
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultSumVariance
index 338
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultTextureHomogeneity
index 339
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultVariance
index 340
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment00
index 341
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment02
index 342
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment03
index 343
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment11
index 344
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment12
index 345
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment20
index 346
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment21
index 347
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.centralmoments.DefaultCentralMoment30
index 348
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment1
index 349
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment2
index 350
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment3
index 351
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment4
index 352
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment5
index 353
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment6
index 354
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.hu.DefaultHuMoment7
index 355
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment02
index 356
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment03
index 357
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment11
index 358
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment12
index 359
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment20
index 360
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment21
index 361
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN imagemoments.normalizedcentralmoments.DefaultNormalizedCentralMoment30
index 362
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultGeometricMean
index 363
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultHarmonicMean
index 364
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultKurtosis
index 365
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMedian
index 367
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment1AboutMean
index 368
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment2AboutMean
index 369
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment3AboutMean
index 370
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMoment4AboutMean
index 371
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultPercentile
index 372
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultQuantile
index 373
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSize
index 374
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSkewness
index 375
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultStandardDeviation
index 376
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSum
index 377
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfInverses
index 378
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfLogs
index 379
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultSumOfSquares
index 380
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultVariance
index 381
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultCoarsenessFeature
index 382
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultContrastFeature
index 383
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.tamura2d.DefaultDirectionalityFeature
index 386
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultMagnitudeFeature
index 387
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN features.zernike.DefaultPhaseFeature
index 388
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.icq.LiICQ
index 389
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.kendallTau.KendallTauBRank
index 390
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.maxTKendallTau.MTKT
index 392
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'Double'} PLUGIN coloc.pearsons.DefaultPearsons
index 410
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.clip.ClipRealTypes
index 411
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.copy.CopyRealTypes
index 413
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.normalizeScale.NormalizeScaleRealTypes
index 414
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN convert.scale.ScaleRealTypes
index 423
index 436
index 440
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'MatrixOrientation'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.DefaultASM
index 441
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocHXY
index 442
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanX
index 443
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocMeanY
index 444
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPX
index 445
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXMinusY
index 446
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPXPlusY
index 447
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN features.haralick.helper.CoocPY
index 448
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdX
index 449
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'double[][]'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN features.haralick.helper.CoocStdY
index 452
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addNoise.AddNoiseRealType
index 453
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN filter.addPoissonNoise.AddPoissonNoiseRealType
index 474
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'RealLocalizable'} PLUGIN geom.DefaultCenterOfGravity
index 478
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultFeretsDiameterForAngle
index 480
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretAngle
index 481
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMaximumFeretDiameter
index 483
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretAngle
index 484
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Polygon2D'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN geom.geom2d.DefaultMinimumFeretDiameter
index 490
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.BitTypeVertexInterpolator
index 491
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'int[]'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'double[]'} PLUGIN geom.geom3d.mesh.DefaultVertexInterpolator
index 492
index 494
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'IterableInterval'} OUTPUT TYPE string OUTPUT {'wipp_type': 'string', 'imagej_type': 'String'} PLUGIN image.ascii.DefaultASCII
index 521
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$And
index 522
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThan
index 523
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableGreaterThanOrEqual
index 524
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThan
index 525
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Comparable'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ComparableLessThanOrEqual
index 526
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Not
index 527
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsEqual
index 528
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'Object'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$ObjectsNotEqual
index 529
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Or
index 530
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
INPUT TYPE boolean INPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} OUTPUT TYPE boolean OUTPUT {'wipp_type': 'boolean', 'imagej_type': 'BooleanType'} PLUGIN logic.BooleanTypeLogic$Xor
index 544
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Add
index 545
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$And
index 546
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Divide
index 547
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Multiply
index 548
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Or
index 549
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Subtract
index 550
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.BinaryRealTypeMath$Xor
index 600
index 601
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Abs
index 602
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccos
index 603
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccosh
index 604
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccot
index 605
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccoth
index 606
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsc
index 607
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arccsch
index 608
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsec
index 609
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsech
index 610
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsin
index 611
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arcsinh
index 612
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctan
index 613
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Arctanh
index 614
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ceil
index 615
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cos
index 616
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cosh
index 617
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Cot
index 618
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Coth
index 619
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csc
index 620
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Csch
index 621
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$CubeRoot
index 622
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Exp
index 623
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$ExpMinusOne
index 624
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Floor
index 625
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$GammaConstant
index 626
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Invert
index 627
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log
index 628
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log10
index 629
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Log2
index 630
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$LogOnePlusX
index 631
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MaxConstant
index 632
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$MinConstant
index 633
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$NearestInt
index 634
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Negate
index 635
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$PowerConstant
index 636
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomGaussian
index 637
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$RandomUniform
index 638
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Reciprocal
index 639
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Round
index 640
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sec
index 641
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sech
index 642
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Signum
index 643
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sin
index 644
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinc
index 645
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$SincPi
index 646
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sinh
index 647
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqr
index 648
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Sqrt
index 649
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Step
index 650
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tan
index 651
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Tanh
index 652
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN math.UnaryRealTypeMath$Ulp
index 671
INPUT TYPE array INPUT {'wipp_type': 'array', 'imagej_type': 'List'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectJunctions.DefaultDetectJunctions
index 672
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'double'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
INPUT TYPE number INPUT {'wipp_type': 'number', 'imagej_type': 'int'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN segment.detectRidges.DefaultDetectRidges
index 673
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralMean
index 674
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralSum
index 675
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'RectangleNeighborhood'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN stats.IntegralVariance
index 719
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE array OUTPUT {'wipp_type': 'array', 'imagej_type': 'List'} PLUGIN topology.BoxCount
index 720
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26N
index 721
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCharacteristic26NFloating
index 722
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'RandomAccessibleInterval'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN topology.eulerCharacteristic.EulerCorrection
index 769
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'FloatType'} PLUGIN convert.ConvertTypes$ComplexToFloat32
index 770
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'DoubleType'} PLUGIN convert.ConvertTypes$ComplexToFloat64
index 771
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ShortType'} PLUGIN convert.ConvertTypes$ComplexToInt16
index 773
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'LongType'} PLUGIN convert.ConvertTypes$ComplexToInt64
index 774
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'ByteType'} PLUGIN convert.ConvertTypes$ComplexToInt8
index 777
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedShortType'} PLUGIN convert.ConvertTypes$ComplexToUint16
index 781
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedLongType'} PLUGIN convert.ConvertTypes$ComplexToUint64
index 782
INPUT TYPE None INPUT {'wipp_type': None, 'imagej_type': 'ComplexType'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'UnsignedByteType'} PLUGIN convert.ConvertTypes$ComplexToUint8
index 822
INPUT TYPE collection INPUT {'wipp_type': 'collection', 'imagej_type': 'Iterable'} OUTPUT TYPE number OUTPUT {'wipp_type': 'number', 'imagej_type': 'RealType'} PLUGIN stats.DefaultMean
['coloc.icq', 'coloc.kendallTau', 'coloc.maxTKendallTau', 'coloc.pValue', 'coloc.pearsons', 'convert.bit', 'convert.cfloat32', 'convert.cfloat64', 'convert.clip', 'convert.copy', 'convert.float32', 'convert.float64', 'convert.imageType', 'convert.int16', 'convert.int32', 'convert.int64', 'convert.int8', 'convert.normalizeScale', 'convert.scale', 'convert.uint12', 'convert.uint128', 'convert.uint16', 'convert.uint2', 'convert.uint32', 'convert.uint4', 'convert.uint64', 'convert.uint8', 'copy.img', 'copy.imgLabeling', 'copy.iterableInterval', 'copy.labelingMapping', 'copy.rai', 'copy.type', 'create.img', 'create.imgFactory', 'create.imgLabeling', 'create.imgPlus', 'create.integerType', 'create.kernel', 'create.kernel2ndDerivBiGauss', 'create.kernelBiGauss', 'create.kernelDiffraction', 'create.kernelGabor', 'create.kernelGaborComplexDouble', 'create.kernelGaborDouble', 'create.kernelGauss', 'create.kernelLog', 'create.kernelSobel', 'create.labelingMapping', 'create.nativeType', 'create.object', 'deconvolve.accelerate', 'deconvolve.firstGuess', 'deconvolve.normalizationFactor', 'deconvolve.richardsonLucy', 'deconvolve.richardsonLucyCorrection', 'deconvolve.richardsonLucyTV', 'deconvolve.richardsonLucyUpdate', 'eval', 'filter.addNoise', 'filter.addPoissonNoise', 'filter.allPartialDerivatives', 'filter.bilateral', 'filter.convolve', 'filter.correlate', 'filter.createFFTOutput', 'filter.derivativeGauss', 'filter.dog', 'filter.fft', 'filter.fftSize', 'filter.frangiVesselness', 'filter.gauss', 'filter.hessian', 'filter.ifft', 'filter.linearFilter', 'filter.max', 'filter.mean', 'filter.median', 'filter.min', 'filter.padFFTInput', 'filter.padInput', 'filter.padShiftFFTKernel', 'filter.paddingIntervalCentered', 'filter.paddingIntervalOrigin', 'filter.partialDerivative', 'filter.sigma', 'filter.sobel', 'filter.tubeness', 'filter.variance', 'geom.boundarySize', 'geom.boundarySizeConvexHull', 'geom.boundingBox', 'geom.boxivity', 'geom.centerOfGravity', 'geom.centroid', 'geom.circularity', 'geom.compactness', 'geom.contour', 'geom.convexHull', 'geom.convexity', 'geom.eccentricity', 'geom.feretsAngle', 'geom.feretsDiameter', 'geom.mainElongation', 'geom.majorAxis', 'geom.marchingCubes', 'geom.maximumFeret', 'geom.maximumFeretsAngle', 'geom.maximumFeretsDiameter', 'geom.medianElongation', 'geom.minimumFeret', 'geom.minimumFeretsAngle', 'geom.minimumFeretsDiameter', 'geom.minorAxis', 'geom.roundness', 'geom.secondMoment', 'geom.size', 'geom.sizeConvexHull', 'geom.smallestEnclosingBoundingBox', 'geom.solidity', 'geom.spareness', 'geom.sphericity', 'geom.vertexInterpolator', 'geom.verticesCount', 'geom.verticesCountConvexHull', 'geom.voxelization', 'haralick.asm', 'haralick.clusterPromenence', 'haralick.clusterShade', 'haralick.contrast', 'haralick.correlation', 'haralick.differenceEntropy', 'haralick.differenceVariance', 'haralick.entropy', 'haralick.icm1', 'haralick.icm2', 'haralick.ifdm', 'haralick.maxProbability', 'haralick.sumAverage', 'haralick.sumEntropy', 'haralick.sumVariance', 'haralick.textureHomogeneity', 'haralick.variance', 'help', 'hog.hog', 'identity', 'image.ascii', 'image.cooccurrenceMatrix', 'image.distancetransform', 'image.equation', 'image.fill', 'image.histogram', 'image.integral', 'image.invert', 'image.normalize', 'image.squareIntegral', 'image.watershed', 'imagemoments.centralMoment00', 'imagemoments.centralMoment01', 'imagemoments.centralMoment02', 'imagemoments.centralMoment03', 'imagemoments.centralMoment10', 'imagemoments.centralMoment11', 'imagemoments.centralMoment12', 'imagemoments.centralMoment20', 'imagemoments.centralMoment21', 'imagemoments.centralMoment30', 'imagemoments.huMoment1', 'imagemoments.huMoment2', 'imagemoments.huMoment3', 'imagemoments.huMoment4', 'imagemoments.huMoment5', 'imagemoments.huMoment6', 'imagemoments.huMoment7', 'imagemoments.moment00', 'imagemoments.moment01', 'imagemoments.moment10', 'imagemoments.moment11', 'imagemoments.normalizedCentralMoment02', 'imagemoments.normalizedCentralMoment03', 'imagemoments.normalizedCentralMoment11', 'imagemoments.normalizedCentralMoment12', 'imagemoments.normalizedCentralMoment20', 'imagemoments.normalizedCentralMoment21', 'imagemoments.normalizedCentralMoment30', 'join', 'labeling.cca', 'labeling.merge', 'lbp.lbp2D', 'linalg.rotate', 'logic.and', 'logic.conditional', 'logic.equal', 'logic.greaterThan', 'logic.greaterThanOrEqual', 'logic.lessThan', 'logic.lessThanOrEqual', 'logic.not', 'logic.notEqual', 'logic.or', 'logic.xor', 'loop', 'map', 'math.abs', 'math.add', 'math.and', 'math.arccos', 'math.arccosh', 'math.arccot', 'math.arccoth', 'math.arccsc', 'math.arccsch', 'math.arcsec', 'math.arcsech', 'math.arcsin', 'math.arcsinh', 'math.arctan', 'math.arctanh', 'math.assign', 'math.ceil', 'math.complement', 'math.complexConjugateMultiply', 'math.cos', 'math.cosh', 'math.cot', 'math.coth', 'math.csc', 'math.csch', 'math.cubeRoot', 'math.divide', 'math.exp', 'math.expMinusOne', 'math.floor', 'math.gamma', 'math.invert', 'math.leftShift', 'math.log', 'math.log10', 'math.log2', 'math.logOnePlusX', 'math.max', 'math.min', 'math.multiply', 'math.nearestInt', 'math.negate', 'math.or', 'math.power', 'math.randomGaussian', 'math.randomUniform', 'math.reciprocal', 'math.remainder', 'math.rightShift', 'math.round', 'math.sec', 'math.sech', 'math.signum', 'math.sin', 'math.sinc', 'math.sincPi', 'math.sinh', 'math.sqr', 'math.sqrt', 'math.step', 'math.subtract', 'math.tan', 'math.tanh', 'math.ulp', 'math.unsignedRightShift', 'math.xor', 'math.zero', 'morphology.blackTopHat', 'morphology.close', 'morphology.dilate', 'morphology.erode', 'morphology.extractHoles', 'morphology.fillHoles', 'morphology.floodFill', 'morphology.open', 'morphology.outline', 'morphology.thinGuoHall', 'morphology.thinHilditch', 'morphology.thinMorphological', 'morphology.thinZhangSuen', 'morphology.topHat', 'op', 'run', 'segment.detectJunctions', 'segment.detectRidges', 'slice', 'stats.geometricMean', 'stats.harmonicMean', 'stats.integralMean', 'stats.integralSum', 'stats.integralVariance', 'stats.kurtosis', 'stats.leastSquares', 'stats.max', 'stats.mean', 'stats.median', 'stats.min', 'stats.minMax', 'stats.moment1AboutMean', 'stats.moment2AboutMean', 'stats.moment3AboutMean', 'stats.moment4AboutMean', 'stats.percentile', 'stats.quantile', 'stats.size', 'stats.skewness', 'stats.stdDev', 'stats.sum', 'stats.sumOfInverses', 'stats.sumOfLogs', 'stats.sumOfSquares', 'stats.variance', 'tamura.coarseness', 'tamura.contrast', 'tamura.directionality', 'thread.chunker', 'threshold.apply', 'threshold.huang', 'threshold.ij1', 'threshold.intermodes', 'threshold.isoData', 'threshold.li', 'threshold.localBernsenThreshold', 'threshold.localContrastThreshold', 'threshold.localMeanThreshold', 'threshold.localMedianThreshold', 'threshold.localMidGreyThreshold', 'threshold.localNiblackThreshold', 'threshold.localPhansalkarThreshold', 'threshold.localSauvolaThreshold', 'threshold.maxEntropy', 'threshold.maxLikelihood', 'threshold.mean', 'threshold.minError', 'threshold.minimum', 'threshold.moments', 'threshold.otsu', 'threshold.percentile', 'threshold.renyiEntropy', 'threshold.rosin', 'threshold.shanbhag', 'threshold.triangle', 'threshold.yen', 'topology.boxCount', 'topology.eulerCharacteristic26N', 'topology.eulerCharacteristic26NFloating', 'topology.eulerCorrection', 'transform.addDimensionView', 'transform.collapseNumericView', 'transform.collapseRealView', 'transform.collapseView', 'transform.concatenateView', 'transform.crop', 'transform.dropSingletonDimensionsView', 'transform.extendBorderView', 'transform.extendMirrorDoubleView', 'transform.extendMirrorSingleView', 'transform.extendPeriodicView', 'transform.extendRandomView', 'transform.extendValueView', 'transform.extendView', 'transform.extendZeroView', 'transform.flatIterableView', 'transform.hyperSliceView', 'transform.interpolateView', 'transform.intervalView', 'transform.invertAxisView', 'transform.offsetView', 'transform.permuteCoordinatesInverseView', 'transform.permuteCoordinatesView', 'transform.permuteView', 'transform.project', 'transform.rasterView', 'transform.rotateView', 'transform.scaleView', 'transform.shearView', 'transform.stackView', 'transform.subsampleView', 'transform.translateView', 'transform.unshearView', 'transform.zeroMinView', 'zernike.magnitude', 'zernike.phase']
{'ListErode': 'out = ij.op().morphology().erode(in1,in2)'}
